{"version":3,"sources":["pages/HomePage.js","pages/FarmersList.js","pages/WhackBat.js","pages/NavBar.js","characters.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/CharacterBio.js","components/FamilyList.js","pages/FamilyListPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","FarmersList","WhackBat","NavBar","to","filmCharacters","urlName","name","species","quote","NotFoundPage","CommentsList","comments","console","log","map","comment","key","className","username","text","UpvotesSection","charName","upvotes","setCharInfo","upvoteCharacter","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","e","target","rows","cols","CharacterBio","urlNameParam","match","params","currCharacter","find","character","charInfo","useEffect","fetchData","FamilyList","familyMembers","filter","substring","FamilyListPage","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.69d7bcdd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <h1>I am a fantastic fox</h1>\n\n      <p>\n        They say all foxes are slightly allergic to linoleum, but it's cool to\n        the paw. They say my tail needs to be dry cleaned twice a month, but now\n        it's fully detachable. They say our tree may never grow back, but one\n        day, something will. Yes, these crackles are made of synthetic goose and\n        these giblets come from artificial squab and even these apples look fake\n        - but at least they've got stars on them. I guess my point is, we'll eat\n        tonight, and we'll eat together. And even in this not particularly\n        flattering light, you are without a doubt the five and a half most\n        wonderful wild animals I've ever met in my life. So let's raise our\n        boxes - to our survival.\n      </p>\n\n      <p>\n        Who am I? Why a fox? Why not a horse, or a beetle, or a bald eagle? I'm\n        saying this more as, like, existentialism, you know? Who am I? And how\n        can a fox ever be happy without, you'll forgive the expression, a\n        chicken in its teeth?\n      </p>\n\n      <p>\n        I don't know, but I have a possible theory. I think I have this thing\n        where I need everybody to think I'm the greatest, the quote-unquote\n        Fantastic Mr. Fox. And if people aren't knocked out and dazzled and\n        slightly intimidated by me, I don't feel good about myself. Foxes\n        traditionally like to court danger, hunt prey, and outsmart predators,\n        and that's what I'm good at. I think at the end of the day, I'm just...\n      </p>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nconst FarmersList = () => {\n  return (\n    <>\n      <h1>Meet the Farmers</h1>\n\n      <p>\n        Walt Boggis is a chicken farmer, probably the most successful in the\n        world. He weighs the same as a young rhinoceros. He eats three chickens\n        every day for breakfast, lunch, supper, and dessert. That's twelve in\n        total per diem. Nate Bunce is a duck and goose farmer. He's\n        approximately the size of a pot-bellied dwarf, and his chin would be\n        underwater in the shallow end of any swimming pool on the planet. His\n        food is homemade donuts with smashed up goose livers injected into them.\n        Frank Bean is a turkey and apple farmer. He invented his own species of\n        each. He lives on a liquid diet of strong alcoholic cider, which he\n        makes from his apples. He's as skinny as a pencil, as smart as a whip,\n        and possibly the scariest man currently living. The local human children\n        sing a kind of... eerie little rhyme about him.\n      </p>\n    </>\n  );\n};\n\nexport default FarmersList;\n","import React from \"react\";\n\nconst WhackBat = () => {\n  return (\n    <>\n      <h1> How to Play Whackbat</h1>\n      <h2>Players</h2>\n      <ul>\n        <li>Grabbers (3)</li>\n        <li>Taggers (3)</li>\n        <li>Twig Runners (5)</li>\n        <li>Batter (1)</li>\n      </ul>\n      <h2>Playing the Game</h2>\n      <ol>\n        <li>\n          The center tagger lights a pine cone and chucks it over the basket\n        </li>\n        <li>The player tries to hit the cedar stick off the cross rock</li>\n        <li>\n          The twig runners dash back and forth until the pine cone burns out\n        </li>\n        <li>The umpire calls \"hotbox\"</li>\n        <li>\n          Count up however many score-downs it adds up to and divide that by\n          nine.\n        </li>\n      </ol>\n    </>\n  );\n};\n\nexport default WhackBat;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/farmers\">The Farmers</Link>\n        </li>\n        <li>\n          <Link to=\"/family\">The Family</Link>\n        </li>\n        <li>\n          <Link to=\"/whackbat\">Whack-Bat</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","const filmCharacters = [\n  {\n    urlName: \"mrfox\",\n    name: \"Mr. Fox\",\n    species: \"vulpes vulpes\",\n    quote:\n      \"I'm seven non-fox years old. My father died at seven and a half. I don't want to live in a hole anymore. I'm going to do something about it.\",\n  },\n  {\n    urlName: \"felicityfox\",\n    name: \"Felicity Fox\",\n    species: \"vulpes vulpes\",\n    quote: \"If what I think is happening is happening, it better not be.\",\n  },\n  {\n    urlName: \"frankbean\",\n    name: \"Franklin Bean\",\n    species: \"homo sapien\",\n    quote: \"That's just weak songwriting! You wrote a BAD song, Petey!\",\n  },\n  {\n    urlName: \"ashfox\",\n    name: \"Ash Fox\",\n    species: \"vulpes vulpes\",\n    quote: \"I'm an athlete\",\n  },\n  {\n    urlName: \"kristoff\",\n    name: \"Kristofferson Silverfox\",\n    species: \"vulpes vulpes (melanistic)\",\n    quote: \"Excuse me, everyone. I'm gonna go meditate for half an hour.\",\n  },\n];\n\nexport default filmCharacters;\n","import React from \"react\";\n\nconst NotFoundPage = () => {\n  return <h1>404: Page Not Found</h1>;\n};\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nconst CommentsList = ({ comments }) => {\n  console.log(comments);\n  return (\n    <>\n      <h3>Comments:</h3>\n      {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n          <h4>{comment.username}</h4>\n          <p>{comment.text}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default CommentsList;\n","import React from \"react\";\n\nconst UpvotesSection = ({ charName, upvotes, setCharInfo }) => {\n  const upvoteCharacter = async () => {\n    const result = await fetch(`/api/character/${charName}/upvote`, {\n      method: \"post\",\n    });\n\n    const body = await result.json();\n    setCharInfo(body);\n  };\n  return (\n    <div id=\"upvotes-section\">\n      <button onClick={upvoteCharacter}>Add Upvote</button>\n      <p>This character has been upvoted {upvotes} times</p>\n    </div>\n  );\n};\n\nexport default UpvotesSection;\n","import React, { useState } from \"react\";\n\nconst AddCommentForm = ({ charName, setCharInfo }) => {\n  const [username, setUsername] = useState(\"\");\n  const [commentText, setCommentText] = useState(\"\");\n\n  const addComment = async () => {\n    const result = await fetch(`/api/character/${charName}/add-comment`, {\n      method: \"post\",\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const body = await result.json();\n    setCharInfo(body);\n    setUsername(\"\");\n    setCommentText(\"\");\n  };\n\n  return (\n    <div id=\"add-comment-form\">\n      <h3>Add a Comment</h3>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </label>\n      <label>\n        Comment:\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={commentText}\n          onChange={(e) => setCommentText(e.target.value)}\n        />\n      </label>\n      <button onClick={() => addComment()}>Add Comment</button>\n    </div>\n  );\n};\n\nexport default AddCommentForm;\n","import React, { useState, useEffect } from \"react\";\nimport filmCharacters from \"../characters.js\";\nimport NotFoundPage from \"./NotFoundPage.js\";\nimport CommentsList from \"../components/CommentsList.js\";\nimport UpvotesSection from \"../components/UpvotesSection.js\";\nimport AddCommentForm from \"../components/AddCommentForm.js\";\n\nconst CharacterBio = ({ match }) => {\n  const urlNameParam = match.params.name;\n  const currCharacter = filmCharacters.find(\n    (character) => character.urlName === urlNameParam\n  );\n\n  const [charInfo, setCharInfo] = useState({ upvotes: 0, comments: [] });\n\n  //================\n  //get rid of the proxy in package.json, it's only there for CORS\n  //================\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(\n        // `http://localhost:8000/api/character/${urlNameParam}`\n        `/api/character/${urlNameParam}`\n      );\n      const body = await result.json();\n      setCharInfo(body);\n    };\n    fetchData();\n  }, [urlNameParam]);\n\n  if (!currCharacter) return <NotFoundPage />;\n  return (\n    <>\n      <h1>{currCharacter.name}</h1>\n      <UpvotesSection\n        charName={charInfo.name}\n        upvotes={charInfo.upvotes}\n        setCharInfo={setCharInfo}\n      />\n      <h5>\n        <em>{currCharacter.species}</em>\n      </h5>\n      <p>\"{currCharacter.quote}\"</p>\n      <CommentsList comments={charInfo.comments} />\n      <AddCommentForm charName={charInfo.name} setCharInfo={setCharInfo} />\n    </>\n  );\n};\n\nexport default CharacterBio;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst FamilyList = ({ familyMembers }) => {\n  return familyMembers\n    .filter((character) => character.species !== \"homo sapien\")\n    .map((character, key) => (\n      <Link\n        className=\"article-list-item\"\n        to={`character/${character.urlName}`}\n        key={key}\n      >\n        <h3>{character.name}</h3>\n        <p>{character.quote.substring(0, 75)}...</p>\n      </Link>\n    ));\n};\n\nexport default FamilyList;\n","import React from \"react\";\nimport FamilyList from \"../components/FamilyList\";\nimport filmCharacters from \"../characters\";\n\nconst FamilyListPage = () => {\n  return (\n    <>\n      <h1>Meet the Family</h1>\n      <FamilyList familyMembers={filmCharacters} />\n    </>\n  );\n};\n\nexport default FamilyListPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport FarmersList from \"./pages/FarmersList\";\nimport WhackBat from \"./pages/WhackBat\";\nimport NavBar from \"./pages/NavBar\";\nimport CharacterBio from \"./pages/CharacterBio\";\nimport FamilyListPage from \"./pages/FamilyListPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/farmers\" component={FarmersList} />\n            <Route path=\"/family\" component={FamilyListPage} />\n            <Route path=\"/character/:name\" component={CharacterBio} />\n            <Route path=\"/whackbat\" component={WhackBat} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}